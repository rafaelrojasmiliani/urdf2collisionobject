#!/usr/bin/env python3

import yaml
import argparse
from roslaunch.substitution_args import resolve_args
import xacro
from pathlib import Path
import rospy


def main():
    rospy.init_node('object_loader')
    parser = argparse.ArgumentParser()
    parser.add_argument(
        'yamlfile',
        help='yaml file with object description',
        type=str)

    args = parser.parse_args()

    with open(args.yamlfile, "r") as stream:
        try:
            objects = yaml.safe_load(stream)
        except yaml.YAMLError as exc:
            print(exc)
    print(args.yamlfile)
    print(objects)
    import pdb
    pdb.set_trace()

    objects = dict([(name, obj) for name, obj in objects.items(
    ) if 'xacro' in obj or 'urdf' in obj])
    if not objects:
        return
    for name, data in objects.items():
        if 'xacro' in data:
            xacro_file = resolve_args(data['xacro'])
            if 'parameters' in data:
                paramters = [
                    param+':='+str(value)
                    for param, value in
                    data['parameters'].items()]
            options, input_file_name = xacro.process_args(
                [xacro_file]+paramters)
            xml_urdf_text = xacro.process_file(
                input_file_name, **vars(options)).toprettyxml()
        if 'urdf' in data:
            urdf_file = resolve_args(data['urdf'])
            xml_urdf_text = Path(urdf_file).read_text()

        data['urdf'] = xml_urdf_text

        rospy.set_param('objects/'+name+'/urdf', xml_urdf_text)
        if 'subframes' in data:
            rospy.set_param('objects/'+name+'/subframes', data['subframes'])


if __name__ == '__main__':
    main()
